{"version":3,"sources":["reducers/Movie/actions.js","api/mainPath.js","api/apiKey.js","reducers/Movie/types.js","reducers/Movie/movieReducer.js","reducers/PopUp/types.js","reducers/PopUp/popUpReducer.js","store/index.js","reducers/Movie/selectors.js","reducers/PopUp/selectors.js","components/Poster/Poster.js","components/Box/Box.js","components/Button/Button.js","reducers/PopUp/actions.js","containers/Movies/Movies.js","containers/DeleteMovie.js","containers/EditPage/utilis.js","components/Alert/Alert.js","containers/EditPage/EditPage.js","containers/PopUp/utilis.js","containers/PopUp/PopUp.js","App.js","store/store.js","index.js"],"names":["PATH","concat","createMovieObject","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","movie","result","_ref3","Title","Genre","Director","Runtime","Year","imdbID","Type","Plot","Poster","wrap","_context2","prev","next","fetch","sent","json","poster","title","genre","director","runtime","year","id","type","split","toUpperCase","slice","toLowerCase","plot","abrupt","stop","_x2","apply","this","arguments","deleteMovie","dispatch","setMovieIndex","index","payload","addMovie","Math","random","ADD_MOVIE","DELETE_MOVIE","GET_MOVIES","CURRENT_MOVIE","SAVE_EDITED_MOVIE","initialState","list","currentMovieIndex","currentMovie","OPEN","CLOSE","isOpen","combineReducers","state","length","undefined","action","objectSpread","toConsumableArray","temp","popUp","getMovies","getters","fromMovieReducer","getCurrentMovie","getCurrentTitles","map","currentModalState","fromModalReducer","currentType","_ref","path","react_default","createElement","className","src","height","alt","Box","components_Poster_Poster","Button","label","onClick","_ref$disable","disable","disabled","openPopUp","closePopUp","Movies","movieListEntity","key","components_Button_Button","_this","props","popUpFunction","components_Box_Box","editMode","fetchMoviesBySearch","movies","React","Component","connect","query","_callee","response","data","_context","replace","Promise","all","then","res","_x","isValidInput","field","border","fixTitle","word","charAt","join","isTitleExist","value","some","isTitleEqual","oldTitle","Alert","isValid","text","EditPage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChangeHandler","setState","defineProperty","onChangeTitleHandler","isExist","isEqual","_this2","_this$state$movie","onChange","e","target","style","components_Alert_Alert","min","max","saveEditedMovie","mainStyle","margin","position","top","left","right","borderRadius","textAlign","color","popUpState","children","componentType","modal","background","component","containers_DeleteMovie","containers_EditPage_EditPage","popUpCases","index_es","open","onClose","styles","App","openModal","containers_PopUp_PopUp","containers_Movies_Movies","middleware","thunk","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.386e6bcf.chunk.js","sourcesContent":["import { MAIN_URL } from '../../api/mainPath';\nimport { API_KEY } from '../../api/apiKey';\n\nconst PATH = `${MAIN_URL}/${API_KEY}`;\n\nexport const fetchMoviesBySearch = (query) => async dispatch => {\n    const path = `${PATH}&s=${query.replace(' ', '+')}`;\n    const response = await fetch(path);\n    const data = await response.json();\n    const list = [...data['Search']];\n    Promise.all(list.map(createMovieObject)).then(res => dispatch({type: 'GET_MOVIES', payload: res}))\n};\n\nexport const createMovieObject = async movie => {\n    const result = await fetch(`${PATH}&t=${movie['Title']}&plot=full`);\n    const {Title, Genre, Director, Runtime, Year, imdbID, Type, Plot, Poster} = await result.json();\n    return await {\n        poster: Poster,\n        title: Title,\n        genre: Genre,\n        director: Director,\n        runtime: Runtime,\n        year: Year,\n        id: imdbID,\n        type: Type.split('')[0].toUpperCase() + Type.slice(1).toLowerCase(),\n        plot: Plot\n    }\n};\n\nexport const deleteMovie = () => dispatch => dispatch({type: 'DELETE_MOVIE'});\n\nexport const setMovieIndex = (index) => dispatch => dispatch({type: 'CURRENT_MOVIE', payload: index});\n\nexport const addMovie = () => dispatch => {\n    const movie = {\n        id: Math.random() * 1000,\n        poster: 'https://i.etsystatic.com/18278551/d/il/703690/1607402502/il_340x270.1607402502_69zh.jpg?',\n        title: 'Title',\n        genre: 'Genre',\n        director: 'Director',\n        runtime: '120 Min',\n        year: '1970',\n        type: 'type',\n        plot: 'Plot'\n    };\n    dispatch({type: 'ADD_MOVIE', payload: movie})\n};\n\nexport const saveEditedMovie = (movie) => dispatch => dispatch({type: 'SAVE_EDITED_MOVIE', payload: movie});\n","export const MAIN_URL = 'https://www.omdbapi.com';\n","export const API_KEY = '?apikey=d6057e8';\n\n","export const ADD_MOVIE = 'ADD_MOVIE';\nexport const DELETE_MOVIE = 'DELETE_MOVIE';\nexport const GET_MOVIES = 'GET_MOVIES';\nexport const CURRENT_MOVIE = 'CURRENT_MOVIE';\nexport const SAVE_EDITED_MOVIE = 'SAVE_EDITED_MOVIE';\n","import { ADD_MOVIE, CURRENT_MOVIE, DELETE_MOVIE, GET_MOVIES, SAVE_EDITED_MOVIE } from './types';\nimport * as getters from './selectors'\n\nconst initialState = {\n    list: [],\n    currentMovieIndex: 0,\n    currentMovie: {}\n};\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case GET_MOVIES:\n            return {...state, list: action.payload};\n\n        case DELETE_MOVIE:\n            return {\n                ...state,\n                list: [...state.list.slice(0, state.currentMovieIndex), ...state.list.slice(state.currentMovieIndex + 1, state.list.length)]\n            };\n\n        case CURRENT_MOVIE:\n            return {...state, currentMovieIndex: action.payload, currentMovie: state.list[action.payload]};\n\n        case ADD_MOVIE:\n            return {...state, list: [action.payload, ...state.list]};\n\n        case SAVE_EDITED_MOVIE:\n            const temp = state.list.slice();\n            temp[state.currentMovieIndex] = action.payload;\n            return {...state, list: [...temp]};\n\n        default:\n            return state\n    }\n}\nexport const getMovies = (state) => getters.getMovies(state);\nexport const getCurrentMovie = (state) => getters.getCurrentMovie(state);\nexport const getCurrentTitles = (state) => getters.getMovieTitles(state);\n","export const OPEN = 'OPEN';\nexport const CLOSE = 'CLOSE';","import * as getters from './selectors'\nimport { CLOSE, OPEN } from './types';\n\nconst initialState = {\n    isOpen: false,\n    type: ''\n};\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case OPEN:\n            return {...state, isOpen: true, type: action.payload};\n\n        case CLOSE:\n            return {...state, isOpen: false};\n\n        default:\n            return state\n    }\n}\nexport const getCurrentModalState = (state) => {\n    return getters.getCurrentModalState(state)\n};\n\nexport const getType = (state) => {\n    return getters.getCurrentType(state)\n};","import { combineReducers } from 'redux'\nimport movieReducer, * as fromMovieReducer from '../reducers/Movie/movieReducer'\nimport modalReducer, * as fromModalReducer from '../reducers/PopUp/popUpReducer';\n\nexport default combineReducers({\n    movie:movieReducer,\n    popUp:modalReducer,\n})\n /*---------------- Movie Selectors ----------------*/\nexport const getMovies = state => fromMovieReducer.getMovies(state.movie);\nexport const getCurrentMovie = state => fromMovieReducer.getCurrentMovie(state.movie);\nexport const getCurrentTitles = state => fromMovieReducer.getCurrentTitles(state.movie);\n\n\n\n\n/*---------------- PopUp Selectors ----------------*/\nexport const currentModalState = state => fromModalReducer.getCurrentModalState(state.popUp);\nexport const currentType = state => fromModalReducer.getType(state.popUp);\n\n\n","export const getMovies = (state) => {return state.list};\n\nexport const getCurrentMovie = (state) => {return state.currentMovie};\n\nexport const getMovieTitles = (state) => {return state.list.map(movie => movie.title)};","export const getCurrentModalState = (state) => {return state.isOpen};\n\nexport const getCurrentType = (state) => {return state.type};","import React from 'react';\nimport './style.scss'\n\nconst Poster = ({path}) => (\n    <div className='poster-wrapper'>\n        <img className='poster' src={path} height={290} alt='poster'/>\n    </div>\n);\n\nexport default Poster;\n","import React from 'react';\nimport Poster from '../Poster/Poster';\nimport './style.scss'\n\nconst Box = ({movie}) => {\n    return (\n        <div className='container'>\n            <Poster path={movie.poster}/>\n            <div className='info'>\n                <div className='title'>{movie.title}\n                    <div className='id'>({movie.id})</div>\n                </div>\n                <div className='genre'>{movie.genre}</div>\n                <hr/>\n                <div className='information'>\n                    <div>{movie.type}</div>\n                    <div>{movie.year}</div>\n                    <div>{movie.runtime}</div>\n                </div>\n                <div className='main'>\n                    <div className='plot'>\n                        {movie.plot}\n                    </div>\n                    <hr/>\n                    <div className='director'>\n                        Director: {movie.director}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nexport default Box;\n","import React from 'react';\nimport './style.scss'\n\nconst Button = ({label, onClick, disable=false}) => (\n    <button className='button' disabled={disable} onClick={onClick}>\n        {label}\n    </button>\n);\n\n\nexport default Button;\n","export const openPopUp = (type) => dispatch => {\n    dispatch({type: 'OPEN', payload: type})\n};\n\nexport const closePopUp = () => dispatch => {\n    dispatch({type: 'CLOSE'})\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addMovie, deleteMovie, fetchMoviesBySearch, setMovieIndex, } from '../../reducers/Movie/actions';\nimport { getMovies } from '../../store/index';\nimport Box from '../../components/Box/Box';\nimport Button from '../../components/Button/Button';\nimport { openPopUp } from '../../reducers/PopUp/actions';\nimport './style.scss'\n\nclass Movies extends React.Component {\n    componentDidMount() {\n        this.props.fetchMoviesBySearch('Batman');\n    }\n\n    movieListEntity = (movie, index) => (\n        <div key={index}>\n            <Button label={'Delete'} onClick={() => this.props.popUpFunction(index, 'delete')}/>\n            <Button label={'Edit'} onClick={() => this.props.popUpFunction(index, 'edit')}/>\n            <Box movie={movie} editMode={true}/>\n        </div>);\n\n\n    render() {\n        return (\n            <div className='box-order'>\n                {this.props.movies.map(this.movieListEntity)}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    movies: getMovies(state),\n});\n\nexport default connect(mapStateToProps, {\n    fetchMoviesBySearch,\n    getMovies,\n    setMovieIndex,\n    deleteMovie,\n    openPopUp,\n    addMovie\n})(Movies)\n","import React from 'react'\nimport Button from '../components/Button/Button';\nimport { deleteMovie } from '../reducers/Movie/actions';\nimport { closePopUp } from '../reducers/PopUp/actions';\nimport { connect } from 'react-redux';\n\nconst DeleteMovie = ({deleteMovie, closePopUp}) => (\n    <div>\n        <p>Do you really want to delete this movie?</p>\n        <Button label={'Yes'} onClick={() => {\n            closePopUp();\n            deleteMovie();\n        }}/>\n        <Button label={'Cancel'} onClick={closePopUp}/>\n\n    </div>\n);\n\nexport default connect(null, {deleteMovie, closePopUp})(DeleteMovie)","export const isValidInput = (field) => field.length <= 0 ? {border: 'solid 1px red'} : {border: 'solid 1px green'};\n\nexport const fixTitle = (title) => {\n    return title\n        .replace(/[^a-zA-Z0-9 ]/g, '')\n        .split(' ')\n        .map(word => word.slice().charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ')\n};\n\nexport const isTitleExist = (value, list) => {\n    return !list.some(title => title === value)\n};\n\nexport const isTitleEqual = (value, oldTitle) => {\n    return (value === oldTitle)\n};","import React from 'react';\nimport './style.scss'\n\nconst Alert = ({isValid, text}) => (\n    <div className='error'>\n        {isValid ? text : ''}\n    </div>\n);\n\nexport default Alert;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getCurrentMovie, getCurrentTitles } from '../../store/index';\nimport { closePopUp } from '../../reducers/PopUp/actions';\nimport { saveEditedMovie } from '../../reducers/Movie/actions';\nimport Poster from '../../components/Poster/Poster';\nimport Button from '../../components/Button/Button';\nimport { fixTitle, isTitleEqual, isTitleExist, isValidInput } from './utilis';\nimport Alert from '../../components/Alert/Alert';\nimport './style.scss'\nimport '../../components/Box/style.scss'\n\nclass EditPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movie: {\n                poster: props.movie.poster,\n                title: props.movie.title,\n                id: props.movie.id,\n                year: props.movie.year,\n                plot: props.movie.plot,\n                genre: props.movie.genre,\n                runtime: props.movie.runtime,\n                director: props.movie.director,\n                type: props.movie.type,\n            },\n            oldTitle: props.movie.title,\n            isValid: true\n\n        }\n    }\n\n    onChangeHandler = (value, label) =>\n        this.setState({\n            movie: {\n                ...this.state.movie,\n                [label]: value\n            }\n        });\n\n\n    onChangeTitleHandler = (value, label) => {\n        const title = fixTitle(value);\n        const isExist = isTitleExist(title, this.props.list);\n        const isEqual = isTitleEqual(title, this.state.oldTitle);\n        this.setState({isValid: isEqual || isExist});\n        this.onChangeHandler(title, label)\n    };\n\n    render() {\n        const {title, id, year, plot, genre, runtime, poster, director, type} = this.state.movie;\n        return (\n            <div className='container'>\n                <div>\n                    <Poster path={poster}/>\n                    <input value={poster}\n                           onChange={(e) => this.onChangeHandler(e.target.value, 'poster')}\n                           style={isValidInput(poster)}\n                    />\n                </div>\n                <div className='info'>\n                    <input className='title'\n                           value={title}\n                           onChange={(e) => this.onChangeTitleHandler(e.target.value, 'title')}\n                           style={isValidInput(title)}/>\n\n                    <Alert isValid={!this.state.isValid} text={'Title is already exist'}/>\n\n                    <input className='id'\n                           value={id}\n                           disabled={true}/>\n\n                    <input className='genre'\n                           value={genre}\n                           onChange={(e) => this.onChangeHandler(e.target.value, 'genre')}\n                           style={isValidInput(genre)}/>\n                    <hr/>\n                    <div className='information'>\n                        <input value={type}\n                               onChange={(e) => this.onChangeHandler(e.target.value, 'type')}\n                               style={isValidInput(type)}/>\n\n                        <input value={year} type='number'\n                               min={1950}\n                               max={2019}\n                               onChange={(e) => this.onChangeHandler(e.target.value, 'year')}\n                               style={isValidInput(year)}/>\n\n                        <input value={runtime.split(' ')[0]}\n                               type='number'\n                               onChange={(e) => this.onChangeHandler(e.target.value, 'runtime')}\n                               style={isValidInput(runtime)}/> Min\n\n                    </div>\n                    <div className='main'>\n                        <textarea className='plot'\n                                  value={plot}\n                                  onChange={(e) => this.onChangeHandler(e.target.value, 'plot')}\n                                  style={isValidInput(plot)}\n\n                        />\n                        <input className='director'\n                               value={director}\n                               onChange={(e) => this.onChangeHandler(e.target.value, 'director')}\n                               style={isValidInput(director)}/>\n                    </div>\n                </div>\n                <Button label={'Save'} onClick={() => {\n                    this.props.saveEditedMovie(this.state.movie);\n                    this.props.closePopUp()\n                }}\n                        disable={!this.state.isValid}/>\n                <Button label={'Cancel'} onClick={this.props.closePopUp}/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    movie: getCurrentMovie(state),\n    list: getCurrentTitles(state)\n});\n\nexport default connect(mapStateToProps, {closePopUp, saveEditedMovie})(EditPage);","import React from 'react';\nimport DeleteMovie from '../DeleteMovie';\nimport EditMovie from '../EditPage/EditPage';\n\nconst mainStyle = {\n    modal: {\n        margin: 'auto',\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        right: '0',\n        border: 'solid thin white',\n        borderRadius: '10px',\n        textAlign: 'center',\n        color: 'white',\n    }\n};\nexport const popUpCases = (type) => {\n    switch (type) {\n        case 'delete':\n            const deleteStyle = {modal: {\n                    ...mainStyle.modal,\n                    background: 'rgba(255,0,0, 0.7)',\n                    height: '100px',\n                }};\n            return {\n                style: deleteStyle,\n                component: <DeleteMovie/>\n            };\n        case 'add':\n        case 'edit':\n            const editStyle = {modal: {...mainStyle.modal, background: 'rgba(46, 49, 49, 0.5)', height: 'auto',}\n            };\n            return {\n                style: editStyle,\n                component: <EditMovie/>\n            };\n\n        default:\n            return 'null'\n    }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { currentModalState, currentType } from '../../store';\nimport Modal from 'react-responsive-modal';\nimport { closePopUp } from '../../reducers/PopUp/actions';\nimport { popUpCases } from './utilis';\nimport './style.scss'\n\nconst PopUp = ({children, popUpState, type,closePopUp}) => {\n    const componentType = popUpCases(type);\n    return (\n        <Modal open={popUpState} onClose={closePopUp} styles={componentType.style}>\n            {componentType.component}\n        </Modal>\n    );\n};\n\nconst mapStateToProps = state => ({\n    popUpState: currentModalState(state),\n    type: currentType(state)\n});\n\nexport default connect(mapStateToProps, {closePopUp})(PopUp);","import React from 'react';\nimport './App.scss';\nimport Movies from './containers/Movies/Movies';\nimport PopUp from './containers/PopUp/PopUp';\nimport Button from './components/Button/Button';\nimport { addMovie, setMovieIndex } from './reducers/Movie/actions';\nimport { connect } from 'react-redux';\nimport { openPopUp } from './reducers/PopUp/actions';\n\nclass App extends React.Component {\n    title = 'Herolo Cinema';\n\n    openModal = (index, type) => {\n        this.props.setMovieIndex(index);\n        this.props.openPopUp(type);\n    };\n\n    render() {\n        return (\n            <div className='App'>\n                <h2>{this.title}</h2>\n                <Button label={'Add'} onClick={() => {\n                    this.props.addMovie();\n                    this.openModal(0,'add');\n                }}/>\n                <PopUp/>\n                <Movies popUpFunction={this.openModal}/>\n            </div>\n        );\n    }\n}\n\n\n\nexport default connect(null, {addMovie,setMovieIndex,openPopUp})(App);\n","import { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './index'\nimport thunk from 'redux-thunk'\n\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(rootReducer,initialState,applyMiddleware(...middleware));\n\nexport default store\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from \"./store/store\";\n\n\nReactDOM.render(\n <Provider store={store}>\n    <App />\n  </Provider>,\n   document.getElementById('root'));\n"],"sourceRoot":""}
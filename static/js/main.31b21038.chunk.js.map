{"version":3,"sources":["reducers/Movie/actions.js","api/mainPath.js","api/apiKey.js","reducers/Movie/types.js","reducers/Movie/movieReducer.js","reducers/PopUp/types.js","reducers/PopUp/popUpReducer.js","store/index.js","reducers/Movie/selectors.js","reducers/PopUp/selectors.js","components/Poster/Poster.js","components/Box/Box.js","components/Button/Button.js","reducers/PopUp/actions.js","containers/Movies/Movies.js","containers/DeleteMovie.js","containers/EditPage/utilis.js","components/Alert/Alert.js","containers/EditPage/EditPage.js","containers/PopUp/utilis.js","containers/PopUp/PopUp.js","App.js","store/store.js","index.js"],"names":["PATH","concat","createMovieObject","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","movie","result","_ref3","Title","Genre","Director","Runtime","Year","imdbID","Type","Plot","Poster","wrap","_context2","prev","next","fetch","sent","json","poster","title","genre","director","runtime","year","id","type","split","toUpperCase","slice","toLowerCase","plot","abrupt","stop","_x2","apply","this","arguments","deleteMovie","dispatch","setMovieIndex","index","payload","addMovie","Math","random","ADD_MOVIE","DELETE_MOVIE","GET_MOVIES","CURRENT_MOVIE","SAVE_EDITED_MOVIE","DELETE_NEW_MOVIE","initialState","list","currentMovieIndex","currentMovie","OPEN","CLOSE","isOpen","combineReducers","state","length","undefined","action","objectSpread","toConsumableArray","temp","popUp","getMovies","getters","fromMovieReducer","getCurrentMovie","getCurrentTitles","map","currentModalState","fromModalReducer","currentType","_ref","path","react_default","createElement","className","src","height","alt","Box","components_Poster_Poster","Button","label","onClick","_ref$disable","disable","disabled","openPopUp","closePopUp","Movies","movieListEntity","key","components_Button_Button","_this","props","popUpFunction","components_Box_Box","editMode","fetchMoviesBySearch","movies","React","Component","connect","query","_callee","response","data","_context","replace","Promise","all","then","res","_x","isValidInput","field","border","fixTitle","word","charAt","join","isTitleExist","value","some","isTitleEqual","oldTitle","Alert","isValid","text","EditPage","classCallCheck","console","log","possibleConstructorReturn","getPrototypeOf","call","onChangeHandler","setState","defineProperty","onChangeTitleHandler","isExist","isEqual","isNew","_this2","_this$state$movie","onChange","e","target","style","components_Alert_Alert","min","max","saveEditedMovie","deleteNewMovie","mainStyle","margin","position","top","left","right","borderRadius","textAlign","color","editStyle","modal","background","popUpState","children","componentType","component","containers_DeleteMovie","containers_EditPage_EditPage","popUpCases","index_es","open","onClose","styles","App","openModal","containers_PopUp_PopUp","containers_Movies_Movies","middleware","thunk","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.31b21038.chunk.js","sourcesContent":["import { MAIN_URL } from '../../api/mainPath';\nimport { API_KEY } from '../../api/apiKey';\n\nconst PATH = `${MAIN_URL}/${API_KEY}`;\n\nexport const fetchMoviesBySearch = (query) => async dispatch => {\n    const path = `${PATH}&s=${query.replace(' ', '+')}`;\n    const response = await fetch(path);\n    const data = await response.json();\n    const list = [...data['Search']];\n    Promise.all(list.map(createMovieObject)).then(res => dispatch({type: 'GET_MOVIES', payload: res}))\n};\n\nexport const createMovieObject = async movie => {\n    const result = await fetch(`${PATH}&t=${movie['Title']}&plot=full`);\n    const {Title, Genre, Director, Runtime, Year, imdbID, Type, Plot, Poster} = await result.json();\n    return await {\n        poster: Poster,\n        title: Title,\n        genre: Genre,\n        director: Director,\n        runtime: Runtime,\n        year: Year,\n        id: imdbID,\n        type: Type.split('')[0].toUpperCase() + Type.slice(1).toLowerCase(),\n        plot: Plot\n    }\n};\n\nexport const deleteMovie = () => dispatch => dispatch({type: 'DELETE_MOVIE'});\n\nexport const setMovieIndex = (index) => dispatch => dispatch({type: 'CURRENT_MOVIE', payload: index});\n\nexport const addMovie = () => dispatch => {\n    const movie = {\n        id: Math.random() * 1000,\n        poster: 'https://i.etsystatic.com/18278551/d/il/703690/1607402502/il_340x270.1607402502_69zh.jpg?',\n        title: 'Title',\n        genre: 'Genre',\n        director: 'Director',\n        runtime: '120 Min',\n        year: '1970',\n        type: 'type',\n        plot: 'Plot'\n    };\n    dispatch({type: 'ADD_MOVIE', payload: movie})\n};\n\nexport const saveEditedMovie = (movie) => dispatch => dispatch({type: 'SAVE_EDITED_MOVIE', payload: movie});\n\nexport const deleteNewMovie = () => dispatch => dispatch({type: 'DELETE_NEW_MOVIE'});","export const MAIN_URL = 'https://www.omdbapi.com';\n","export const API_KEY = '?apikey=d6057e8';\n\n","export const ADD_MOVIE = 'ADD_MOVIE';\nexport const DELETE_MOVIE = 'DELETE_MOVIE';\nexport const GET_MOVIES = 'GET_MOVIES';\nexport const CURRENT_MOVIE = 'CURRENT_MOVIE';\nexport const SAVE_EDITED_MOVIE = 'SAVE_EDITED_MOVIE';\nexport const DELETE_NEW_MOVIE = 'DELETE_NEW_MOVIE';\n\n","import { ADD_MOVIE, CURRENT_MOVIE, DELETE_MOVIE, DELETE_NEW_MOVIE, GET_MOVIES, SAVE_EDITED_MOVIE } from './types';\nimport * as getters from './selectors'\n\nconst initialState = {\n    list: [],\n    currentMovieIndex: 0,\n    currentMovie: {}\n};\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case GET_MOVIES:\n            return {...state, list: action.payload};\n\n        case DELETE_MOVIE:\n            return {\n                ...state,\n                list: [...state.list.slice(0, state.currentMovieIndex), ...state.list.slice(state.currentMovieIndex + 1, state.list.length)]\n            };\n\n        case CURRENT_MOVIE:\n            return {...state, currentMovieIndex: action.payload, currentMovie: state.list[action.payload]};\n\n        case ADD_MOVIE:\n            return {...state, list: [action.payload, ...state.list]};\n\n        case SAVE_EDITED_MOVIE:\n            const temp = state.list.slice();\n            temp[state.currentMovieIndex] = action.payload;\n            return {...state, list: [...temp]};\n\n        case DELETE_NEW_MOVIE:\n            return {...state, list:[...state.list.slice(1)]};\n        default:\n            return state\n    }\n}\nexport const getMovies = (state) => getters.getMovies(state);\nexport const getCurrentMovie = (state) => getters.getCurrentMovie(state);\nexport const getCurrentTitles = (state) => getters.getMovieTitles(state);\n","export const OPEN = 'OPEN';\nexport const CLOSE = 'CLOSE';","import * as getters from './selectors'\nimport { CLOSE, OPEN } from './types';\n\nconst initialState = {\n    isOpen: false,\n    type: ''\n};\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case OPEN:\n            return {...state, isOpen: true, type: action.payload};\n\n        case CLOSE:\n            return {...state, isOpen: false};\n\n        default:\n            return state\n    }\n}\nexport const getCurrentModalState = (state) => {\n    return getters.getCurrentModalState(state)\n};\n\nexport const getType = (state) => {\n    return getters.getCurrentType(state)\n};","import { combineReducers } from 'redux'\nimport movieReducer, * as fromMovieReducer from '../reducers/Movie/movieReducer'\nimport modalReducer, * as fromModalReducer from '../reducers/PopUp/popUpReducer';\n\nexport default combineReducers({\n    movie:movieReducer,\n    popUp:modalReducer,\n})\n /*---------------- Movie Selectors ----------------*/\nexport const getMovies = state => fromMovieReducer.getMovies(state.movie);\nexport const getCurrentMovie = state => fromMovieReducer.getCurrentMovie(state.movie);\nexport const getCurrentTitles = state => fromMovieReducer.getCurrentTitles(state.movie);\n\n\n\n\n/*---------------- PopUp Selectors ----------------*/\nexport const currentModalState = state => fromModalReducer.getCurrentModalState(state.popUp);\nexport const currentType = state => fromModalReducer.getType(state.popUp);\n\n\n","export const getMovies = (state) => {return state.list};\n\nexport const getCurrentMovie = (state) => {return state.currentMovie};\n\nexport const getMovieTitles = (state) => {return state.list.map(movie => movie.title)};","export const getCurrentModalState = (state) => {return state.isOpen};\n\nexport const getCurrentType = (state) => {return state.type};","import React from 'react';\nimport './style.scss'\n\nconst Poster = ({path}) => (\n    <div className='poster-wrapper'>\n        <img className='poster' src={path} height={290} alt='poster'/>\n    </div>\n);\n\nexport default Poster;\n","import React from 'react';\nimport Poster from '../Poster/Poster';\nimport './style.scss'\n\nconst Box = ({movie}) => {\n    return (\n        <div className='container'>\n            <Poster path={movie.poster}/>\n            <div className='info'>\n                <div className='title'>{movie.title}\n                    <div className='id'>({movie.id})</div>\n                </div>\n                <div className='genre'>{movie.genre}</div>\n                <hr/>\n                <div className='information'>\n                    <div>{movie.type}</div>\n                    <div>{movie.year}</div>\n                    <div>{movie.runtime}</div>\n                </div>\n                <div className='main'>\n                    <div className='plot'>\n                        {movie.plot}\n                    </div>\n                    <hr/>\n                    <div className='director'>\n                        Director: {movie.director}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nexport default Box;\n","import React from 'react';\nimport './style.scss'\n\nconst Button = ({label, onClick, disable=false}) => (\n    <button className='button' disabled={disable} onClick={onClick}>\n        {label}\n    </button>\n);\n\n\nexport default Button;\n","export const openPopUp = (type) => dispatch => {\n    dispatch({type: 'OPEN', payload: type})\n};\n\nexport const closePopUp = () => dispatch => {\n    dispatch({type: 'CLOSE'})\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addMovie, deleteMovie, fetchMoviesBySearch, setMovieIndex, } from '../../reducers/Movie/actions';\nimport { getMovies } from '../../store/index';\nimport Box from '../../components/Box/Box';\nimport Button from '../../components/Button/Button';\nimport { openPopUp } from '../../reducers/PopUp/actions';\nimport './style.scss'\n\nclass Movies extends React.Component {\n    componentDidMount() {\n        this.props.fetchMoviesBySearch('Batman');\n    }\n\n    movieListEntity = (movie, index) => (\n        <div key={index}>\n            <Button label={'Delete'} onClick={() => this.props.popUpFunction(index, 'delete')}/>\n            <Button label={'Edit'} onClick={() => this.props.popUpFunction(index, 'edit')}/>\n            <Box movie={movie} editMode={true}/>\n        </div>);\n\n\n    render() {\n        return (\n            <div className='box-order'>\n                {this.props.movies.map(this.movieListEntity)}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    movies: getMovies(state),\n});\n\nexport default connect(mapStateToProps, {\n    fetchMoviesBySearch,\n    getMovies,\n    setMovieIndex,\n    deleteMovie,\n    openPopUp,\n    addMovie\n})(Movies)\n","import React from 'react'\nimport Button from '../components/Button/Button';\nimport { deleteMovie } from '../reducers/Movie/actions';\nimport { closePopUp } from '../reducers/PopUp/actions';\nimport { connect } from 'react-redux';\n\nconst DeleteMovie = ({deleteMovie, closePopUp}) => (\n    <div>\n        <p>Do you really want to delete this movie?</p>\n        <Button label={'Yes'} onClick={() => {\n            closePopUp();\n            deleteMovie();\n        }}/>\n        <Button label={'Cancel'} onClick={closePopUp}/>\n\n    </div>\n);\n\nexport default connect(null, {deleteMovie, closePopUp})(DeleteMovie)","export const isValidInput = (field) => field.length <= 0 ? {border: 'solid 1px red'} : {border: 'solid 1px green'};\n\nexport const fixTitle = (title) => {\n    return title\n        .replace(/[^a-zA-Z0-9 ]/g, '')\n        .split(' ')\n        .map(word => word.slice().charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ')\n};\n\nexport const isTitleExist = (value, list) => {\n    return !list.some(title => title === value)\n};\n\nexport const isTitleEqual = (value, oldTitle) => {\n    return (value === oldTitle)\n};","import React from 'react';\nimport './style.scss'\n\nconst Alert = ({isValid, text}) => (\n    <div className='error'>\n        {isValid ? text : ''}\n    </div>\n);\n\nexport default Alert;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getCurrentMovie, getCurrentTitles } from '../../store/index';\nimport { closePopUp } from '../../reducers/PopUp/actions';\nimport { deleteNewMovie, saveEditedMovie } from '../../reducers/Movie/actions';\nimport Poster from '../../components/Poster/Poster';\nimport Button from '../../components/Button/Button';\nimport { fixTitle, isTitleEqual, isTitleExist, isValidInput } from './utilis';\nimport Alert from '../../components/Alert/Alert';\nimport './style.scss'\nimport '../../components/Box/style.scss'\n\nclass EditPage extends React.Component {\n    constructor(props) {\n        console.log('props', props);\n        super(props);\n        this.state = {\n            movie: {\n                poster: props.movie.poster,\n                title: props.movie.title,\n                id: props.movie.id,\n                year: props.movie.year,\n                plot: props.movie.plot,\n                genre: props.movie.genre,\n                runtime: props.movie.runtime,\n                director: props.movie.director,\n                type: props.movie.type,\n            },\n            oldTitle: props.movie.title,\n            isValid: true,\n            isNew:props.isNew\n\n\n        }\n    }\n\n    onChangeHandler = (value, label) =>\n        this.setState({\n            movie: {\n                ...this.state.movie,\n                [label]: value\n            }\n        });\n\n\n    onChangeTitleHandler = (value, label) => {\n        const title = fixTitle(value);\n        const isExist = isTitleExist(title, this.props.list);\n        const isEqual = isTitleEqual(title, this.state.oldTitle);\n        this.setState({isValid: isEqual || isExist});\n        this.onChangeHandler(title, label)\n    };\n\n    render() {\n        const {title, id, year, plot, genre, runtime, poster, director, type} = this.state.movie;\n        const {isNew} = this.state;\n        return (\n            <div className='container'>\n                <div>\n                    <Poster path={poster}/>\n                    <input value={poster}\n                           onChange={(e) => this.onChangeHandler(e.target.value, 'poster')}\n                           style={isValidInput(poster)}\n                    />\n                </div>\n                <div className='info'>\n                    <input className='title'\n                           value={title}\n                           onChange={(e) => this.onChangeTitleHandler(e.target.value, 'title')}\n                           style={isValidInput(title)}/>\n\n                    <Alert isValid={!this.state.isValid} text={'Title is already exist'}/>\n\n                    <input className='id'\n                           value={id}\n                           disabled={true}/>\n\n                    <input className='genre'\n                           value={genre}\n                           onChange={(e) => this.onChangeHandler(e.target.value, 'genre')}\n                           style={isValidInput(genre)}/>\n                    <hr/>\n                    <div className='information'>\n                        <input value={type}\n                               onChange={(e) => this.onChangeHandler(e.target.value, 'type')}\n                               style={isValidInput(type)}/>\n\n                        <input value={year} type='number'\n                               min={1950}\n                               max={2019}\n                               onChange={(e) => this.onChangeHandler(e.target.value, 'year')}\n                               style={isValidInput(year)}/>\n\n                        <input value={runtime.split(' ')[0]}\n                               type='number'\n                               onChange={(e) => this.onChangeHandler(e.target.value, 'runtime')}\n                               style={isValidInput(runtime)}/> Min\n\n                    </div>\n                    <div className='main'>\n                        <textarea className='plot'\n                                  value={plot}\n                                  onChange={(e) => this.onChangeHandler(e.target.value, 'plot')}\n                                  style={isValidInput(plot)}\n\n                        />\n                        <input className='director'\n                               value={director}\n                               onChange={(e) => this.onChangeHandler(e.target.value, 'director')}\n                               style={isValidInput(director)}/>\n                    </div>\n                </div>\n                <Button label={'Save'} onClick={() => {\n                    this.props.saveEditedMovie(this.state.movie);\n                    this.props.closePopUp()\n                }}\n                        disable={!this.state.isValid}/>\n                {\n                    isNew ?\n                        <Button label={'Cancel'} onClick={() => {\n                            this.props.deleteNewMovie();\n                            this.props.closePopUp();\n                        }\n                        }/>\n                        :\n                        <Button label={'Cancel'} onClick={this.props.closePopUp}/>\n                }\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    movie: getCurrentMovie(state),\n    list: getCurrentTitles(state)\n});\n\nexport default connect(mapStateToProps, {closePopUp, saveEditedMovie, deleteNewMovie})(EditPage);","import React from 'react';\nimport DeleteMovie from '../DeleteMovie';\nimport EditMovie from '../EditPage/EditPage';\n\nconst mainStyle = {\n    modal: {\n        margin: 'auto',\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        right: '0',\n        border: 'solid thin white',\n        borderRadius: '10px',\n        textAlign: 'center',\n        color: 'white',\n    }\n};\nconst editStyle = {modal: {...mainStyle.modal, background: 'rgba(46, 49, 49, 0.5)', height: 'auto',}};\nexport const popUpCases = (type) => {\n    switch (type) {\n        case 'delete':\n            const deleteStyle = {modal: {\n                    ...mainStyle.modal,\n                    background: 'rgba(255,0,0, 0.7)',\n                    height: '100px',\n                }};\n            return {\n                style: deleteStyle,\n                component: <DeleteMovie/>\n            };\n        case 'add':\n            return {\n                style: editStyle,\n                component: <EditMovie isNew={true}/>\n            };\n\n        case 'edit':\n            return {\n                style: editStyle,\n                component: <EditMovie isNew={false}/>\n            };\n\n        default:\n            return 'null'\n    }\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { currentModalState, currentType } from '../../store';\nimport Modal from 'react-responsive-modal';\nimport { closePopUp } from '../../reducers/PopUp/actions';\nimport { popUpCases } from './utilis';\nimport './style.scss'\n\nconst PopUp = ({children, popUpState, type,closePopUp}) => {\n    const componentType = popUpCases(type);\n    return (\n        <Modal open={popUpState} onClose={closePopUp} styles={componentType.style}>\n            {componentType.component}\n        </Modal>\n    );\n};\n\nconst mapStateToProps = state => ({\n    popUpState: currentModalState(state),\n    type: currentType(state)\n});\n\nexport default connect(mapStateToProps, {closePopUp})(PopUp);","import React from 'react';\nimport './App.scss';\nimport Movies from './containers/Movies/Movies';\nimport PopUp from './containers/PopUp/PopUp';\nimport Button from './components/Button/Button';\nimport { addMovie, setMovieIndex } from './reducers/Movie/actions';\nimport { connect } from 'react-redux';\nimport { openPopUp } from './reducers/PopUp/actions';\n\nclass App extends React.Component {\n    title = 'Batman Cinema';\n\n    openModal = (index, type) => {\n        this.props.setMovieIndex(index);\n        this.props.openPopUp(type);\n    };\n\n    render() {\n        return (\n            <div className='App'>\n                <h2>{this.title}</h2>\n                <Button label={'Add'} onClick={() => {\n                    this.props.addMovie();\n                    this.openModal(0,'add');\n                }}/>\n                <PopUp/>\n                <Movies popUpFunction={this.openModal}/>\n            </div>\n        );\n    }\n}\n\n\n\nexport default connect(null, {addMovie,setMovieIndex,openPopUp})(App);\n","import { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './index'\nimport thunk from 'redux-thunk'\n\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(rootReducer,initialState,applyMiddleware(...middleware));\n\nexport default store\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from \"./store/store\";\n\n\nReactDOM.render(\n <Provider store={store}>\n    <App />\n  </Provider>,\n   document.getElementById('root'));\n"],"sourceRoot":""}